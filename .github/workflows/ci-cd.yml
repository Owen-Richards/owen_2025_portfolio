name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ================================
  # Code Quality & Linting
  # ================================
  lint-and-format:
    name: 🧹 Lint & Format
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧹 ESLint
        run: npm run lint

      - name: 💅 Prettier check
        run: npm run format:check

      - name: 📝 TypeScript check
        run: npm run type-check

  # ================================
  # Testing
  # ================================
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm run test -- --coverage --watchAll=false

      - name: 📊 Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # ================================
  # Build & Performance
  # ================================
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [lint-and-format]

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: 📊 Bundle Analysis
        if: github.event_name == 'pull_request'
        run: npm run analyze

      - name: 💾 Cache build
        uses: actions/cache@v4
        with:
          path: .next
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

  # ================================
  # Lighthouse Performance Audit
  # ================================
  lighthouse:
    name: 🚨 Lighthouse
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'pull_request'

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build
        run: npm run build

      - name: 🚀 Start server
        run: npm start &

      - name: ⏳ Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: 🚨 Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # ================================
  # Security Audit
  # ================================
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 🔒 Run security audit
        run: npm audit --audit-level moderate

      - name: 🔍 Run Snyk security check
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # ================================
  # Deployment to Vercel
  # ================================
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: '--prod'

  # ================================
  # Notification
  # ================================
  notify:
    name: 📢 Notify
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always() && github.ref == 'refs/heads/main'

    steps:
      - name: 📢 Deployment notification
        if: needs.deploy.result == 'success'
        run: |
          echo "✅ Deployment successful!"
          echo "🌐 Check your application at: https://your-domain.vercel.app"

      - name: 📢 Failure notification
        if: needs.deploy.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          echo "🔍 Check the logs for more details."
